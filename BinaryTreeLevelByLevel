# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def __init__(self):
        self.result=[];
        self.sublist=[];
    
    def height(self,node):
        if(node is None):
            return 0;
        else:
            ldepth=self.height(node.left);
            rdepth=self.height(node.right);
            return max(ldepth,rdepth)+1;
        
    def levelOrder(self, root: TreeNode) -> List[List[int]]:
        if(not root):
            return [];
        h=self.height(root);
        if(h==1):
            self.result.append([root.val]);
            return self.result;
        for i in range(1,h+1):
            self.levelBylevel(root,i);
            self.result.append(self.sublist);
            self.sublist=[];
        return self.result;
            
    def levelBylevel(self,node,level):
        if(not node):
            return ;
        if(level==1):
            self.sublist.append(node.val);
        else:
            self.levelBylevel(node.left,level-1);
            self.levelBylevel(node.right,level-1);
            
        
